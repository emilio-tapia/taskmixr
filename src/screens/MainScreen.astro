---
import CardField from '../components/CardField.astro';
import i18next, { t } from 'i18next';
import DiceIcon from '../components/icons/DiceIcon.astro';
import SaveIcon from '../components/icons/SaveIcon.astro';
---

<section class="mainscreen">
  <aside>
    <CardField className={'user'} idName={'users'}>
      <div class="user__content">
        <div class="user__title">
          <h5>{t('site.enteruser')}</h5>
        </div>
        <div class="user__inputs">
          <input type="text" name="" placeholder={t('site.user')} id="" />
          <input type="text" name="" placeholder={t('site.user')} id="" />
        </div>
      </div>
      <div class="user__btn">
        <button class="addBtn">+</button>
      </div>
    </CardField>
    <CardField className="chores" idName={'chores'}>
      <div class="chores__content">
        <div class="chores__title">
          <h5>{t('site.enterchore')}</h5>
        </div>
        <div class="chores__inputs">
          <input type="text" name="" placeholder={t('site.chore') + ' 1'} id="" />
          <input type="text" name="" placeholder={t('site.chore') + ' 2'} id="" />
        </div>
      </div>
      <div class="chores__btn">
        <button class="addBtn">+</button>
      </div>
    </CardField>
  </aside>

  <CardField className="results__section" idName={'results'}>
    <div class="results__content">
      <div class="results__title">
        <h5>{t('site.resultlist')}</h5>
      </div>
      <div class="results__container">
        <ul>
          <li>
            <div>
              <span class="chore">{t('site.chore')} 1</span>
              <span class="user">{t('site.user')}</span>
            </div>
          </li>
        </ul>
      </div>
    </div>
    <div class="results__mainBtns">
      <input
        type="text"
        name="results__title"
        id="results__title"
        contenteditable="Results Title"
        placeholder={t('site.titleblank')}
      />
      <button type="submit" class="mainBtn" id="mainBtn">
        <DiceIcon/>
      </button>

      <button type="submit" class="saveBtn" id="saveBtn" disabled
        ><SaveIcon/></button
      >
    </div>
  </CardField>
</section>

<style lang="scss" is:global>
  @use '../styles/mixins' as m;
  section.mainscreen {
    display: flex;
    gap: 1rem;
    width: 100%;
    min-height: fit-content;
    justify-content: space-between;
    flex-direction: column;
    
    @include m.mediaBreakpoint(700){
      flex-direction: row;
    }


    h5 {
        color: var(--accent-text-light);
        font-weight: 500;
        font-size: var(--maintitle-size);
      }
    

    & > aside {
      display: flex;
      flex-direction: column;
      
      gap: 1rem;

      & > *{
        flex: 1;
        
        justify-content: space-between;
      }

      @include m.mediaBreakpoint(500){
        flex-direction: row;
    }

      @include m.mediaBreakpoint(700){
        flex-direction: column;

        & > *{
          flex: auto;
        justify-content: flex-start;
      }
    }

      .user,
      .chores {
        &__btn {
          flex-direction: row !important;

          button {
            flex: 1;
          }
        }
      }

      div {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
    }

    input {
      padding: 0.5rem;
      border: 0;
      border-radius: 0.5rem;
      background: var(--bg-light-2);
      color: var(--bg-dark-text);
    }

    .results {
      &__section {
        flex: 1;
        justify-content: space-between;
      }

      &__container {
        ul {
          display: flex;
          flex-direction: column;
          gap: 0.5rem;
        }

        li {
          & > div {
            padding: 0.5rem;
            border: 0;
            border-radius: 0.5rem;
            background: var(--bg-light-2);
            display: flex;
            justify-content: space-between;
            flex-direction: column;

            @include m.mediaBreakpoint(330){
              flex-direction: row;
        }

            span:first-child {
              color: var(--accent-text-light);
            }
            span:last-child {
              color: var(--accent-text-light);
            }
          }
        }
      }

      &__content{
        display: flex;
    flex-direction: column;
    gap: 1rem;
      }

      &__mainBtns {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
        gap: 1rem;

        svg{
          margin-inline: auto;
        }

        &>:first-child {
          flex-basis:  100%;
        }

        & > :not(:first-child) {
          flex: 1;
fill: var(--white);
        }

        @include m.mediaBreakpoint(500){
          &>:first-child {
          flex: 5;
        }

        & > :not(:first-child) {
          flex: 0;
        }
    }
      }
    }

  }
</style>

<script >
  import {Input} from '../models/Input'
  import {ChoreGroup} from '../models/ChoreGroup'
  import {UserGroup} from '../models/UserGroup'
  import {RandomButton} from '../models/RandomButton'
  import {SaveButton} from '../models/SaveButton'
  import {
    chores,
    lang,
    localStorageKey,
    results,
    users
  } from '../helpers/data.ts';


  // ================== CHORE CLASS ========= ===== //

  class Chore extends Input {
    constructor(storeArray: Array<Chore>, section: HTMLElement) {
      super({storeArray: storeArray, section:section, displayName: 'Task'});
    }
  }
  // ================== USER CLASS ============== //

  class User extends Input {
    constructor(storeArray: Array<User>, section: HTMLElement) {
      super({storeArray: storeArray, section:section});
    }
  }
  
// ================== LOAD ============== //

  window.addEventListener('load', async (e) => {
    // RETURN DUMMY RESULTS
    document.getElementById('results')!.querySelector('ul')!.innerHTML = '';

    new UserGroup(users, 'users', User);
    new ChoreGroup(chores, 'chores', Chore, results);
    const saveBtn = new SaveButton('saveBtn');
    const randomBtn = new RandomButton('mainBtn');

    // new ChoreGroup(chores);
  });

  //========== FUNCTIONS ===========//
</script>
