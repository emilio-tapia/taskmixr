---
import "../styles/MainScreen.scss";
import "../styles/Buttons.scss";
import CardField from '../components/CardField.astro';
import { t } from 'i18next';
import DiceIcon from '../components/icons/DiceIcon.astro';
import SaveIcon from '../components/icons/SaveIcon.astro';
---

<section class="mainscreen">
  <aside>
    <CardField className={'user'} idName={'users'}>
      <div class="user__content">
        <div class="user__title">
          <h5>{t('site.enteruser')}</h5>
        </div>
        <div class="user__inputs">
          <input type="text" name="" placeholder={t('site.user')} id="" />
          <input type="text" name="" placeholder={t('site.user')} id="" />
        </div>
      </div>
      <div class="user__btn">
        <button class="addBtn" aria-label="Add user">+</button>
      </div>
    </CardField>
    <CardField className="chores" idName={'chores'}>
      <div class="chores__content">
        <div class="chores__title">
          <h5>{t('site.enterchore')}</h5>
        </div>
        <div class="chores__inputs">
          <input type="text" name="" placeholder={t('site.chore') + ' 1'} id="" />
          <input type="text" name="" placeholder={t('site.chore') + ' 2'} id="" />
        </div>
      </div>
      <div class="chores__btn">
        <button class="addBtn" aria-label="Add task">+</button>
      </div>
    </CardField>
  </aside>

  <CardField className="results__section" idName={'results'}>
    <div class="results__content">
      <div class="results__title">
        <h5>{t('site.resultlist')}</h5>
      </div>
      <div class="results__container">
        <ul>
          <li>
            <div>
              <span class="chore">{t('site.chore')} 1</span>
              <span class="user">{t('site.user')}</span>
            </div>
          </li>
        </ul>
      </div>
    </div>
    <div class="results__mainBtns">
      <input
        type="text"
        name="results__title"
        id="results__title"
        contenteditable="Results Title"
        placeholder={t('site.titleblank')}
        aria-label="Custom title"
      />
      <button type="submit" class="mainBtn" id="mainBtn" aria-label="Random results">
        <DiceIcon/>
      </button>

      <button type="submit" class="saveBtn" id="saveBtn"  aria-label="Save results" disabled
        ><SaveIcon/></button
      >
    </div>
  </CardField>
</section>

<script >
  import {Input} from '../models/Input'
  import {ChoreGroup} from '../models/ChoreGroup'
  import {UserGroup} from '../models/UserGroup'
  import {RandomButton} from '../models/RandomButton'
  import {SaveButton} from '../models/SaveButton'
  import {
    chores,
    lang,
    localStorageKey,
    results,
    users
  } from '../helpers/data.ts';
import type { Result } from '../models/ResultMainScreen'


function setInputName(inputType:string){
  switch (document.documentElement.lang) {
    case 'en':
      if(inputType === 'task') return 'Task'
      if(inputType === 'user') return 'User'
      break;
    case 'es':
      if(inputType === 'task') return 'Tarea'
      if(inputType === 'user') return 'Usuario'
      break;
    case 'fr':
      if(inputType === 'task') return 'TÃ¢che'
      if(inputType === 'user') return 'Usager'
      break;
  }
}


  // ================== CHORE CLASS ========= ===== //

  class Chore extends Input {
    constructor(storeArray: Array<Chore>, section: HTMLElement) {
      super({storeArray: storeArray, section:section, displayName: setInputName('task')});
    }
  }

  // ================== USER CLASS ============== //

  class User extends Input {
    constructor(storeArray: Array<User>, section: HTMLElement) {
      super({storeArray: storeArray, section:section, displayName: setInputName('user')});
    }
  }
  
// ================== LOAD ============== //

  window.addEventListener('load', async (e) => {
    // RETURN DUMMY RESULTS
    document.getElementById('results')!.querySelector('ul')!.innerHTML = '';

    new UserGroup(users as User[], 'users', User);
    new ChoreGroup(chores as Chore[], 'chores', Chore, results as Result[]);
    const saveBtn = new SaveButton('saveBtn');
    const randomBtn = new RandomButton('mainBtn');

    // new ChoreGroup(chores);
  });

  //========== FUNCTIONS ===========//
</script>
